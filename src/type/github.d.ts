// Generated by https://quicktype.io

export interface GithubRef {
    ref:     string;
    node_id: string;
    url:     string;
    object:  Object;
}

export interface Object {
    sha:  string;
    type: string;
    url:  string;
}

// Generated by https://quicktype.io

export interface GithubCommit {
    sha:          string;
    node_id:      string;
    url:          string;
    html_url:     string;
    author:       Author;
    committer:    Author;
    tree:         Tree;
    message:      string;
    parents:      Parent[];
    verification: Verification;
}

export interface Author {
    name:  string;
    email: string;
    date:  string;
}

export interface Parent {
    sha:      string;
    url:      string;
    html_url: string;
}

export interface Tree {
    sha: string;
    url: string;
}

// Generated by https://quicktype.io

export interface GithubTree {
    sha:       string;
    url:       string;
    tree:      Tree[];
    truncated: boolean;
    parent?: GithubTree;
}

export interface Tree {
    path:  string;
    mode:  string;
    type:  Type;
    sha:   string;
    size: number;
    url:   string;
}

export enum Type {
    Blob = "blob",
    Tree = "tree",
}

// Generated by https://quicktype.io

export interface GithubBlob {
    sha:      string;
    node_id:  string;
    size:     number;
    url:      string;
    content:  string;
    encoding: string;
}

// Generated by https://quicktype.io

export interface GithubProfile {
    login:                     string;
    id:                        number;
    node_id:                   string;
    avatar_url:                string;
    gravatar_id:               string;
    url:                       string;
    html_url:                  string;
    followers_url:             string;
    following_url:             string;
    gists_url:                 string;
    starred_url:               string;
    subscriptions_url:         string;
    organizations_url:         string;
    repos_url:                 string;
    events_url:                string;
    received_events_url:       string;
    type:                      string;
    site_admin:                boolean;
    name:                      string;
    company:                   null;
    blog:                      string;
    location:                  null;
    email:                     null;
    hireable:                  boolean;
    bio:                       string;
    public_repos:              number;
    public_gists:              number;
    followers:                 number;
    following:                 number;
    created_at:                string;
    updated_at:                string;
    private_gists:             number;
    total_private_repos:       number;
    owned_private_repos:       number;
    disk_usage:                number;
    collaborators:             number;
    two_factor_authentication: boolean;
    plan:                      Plan;
}

export interface Plan {
    name:          string;
    space:         number;
    collaborators: number;
    private_repos: number;
}

// Generated by https://quicktype.io

export interface GithubTag {
    node_id:      string;
    sha:          string;
    url:          string;
    tagger:       Tagger;
    object:       Object;
    tag:          string;
    message:      string;
    verification: Verification;
}

export interface Object {
    sha:  string;
    type: string;
    url:  string;
}

export interface Tagger {
    name:  string;
    email: string;
    date:  string;
}

export interface Verification {
    verified:  boolean;
    reason:    string;
    signature: string;
    payload:   string;
}


// Generated by https://quicktype.io

export interface GithubLimits {
    resources: Resources;
    rate:      Rate;
}

export interface Rate {
    limit:     number;
    remaining: number;
    reset:     number;
}

export interface Resources {
    core:                 Rate;
    search:               Rate;
    graphql:              Rate;
    integration_manifest: Rate;
    source_import:        Rate;
}

// Generated by https://quicktype.io

export interface GithubSearchRepo {
    total_count: number,
    incomplete_results: boolean,
    items: GithubRepo[]
}

export interface GithubRepo {
    id:                number;
    node_id:           string;
    name:              string;
    full_name:         string;
    private:           boolean;
    owner:             Owner;
    html_url:          string;
    description:       string;
    fork:              boolean;
    url:               string;
    forks_url:         string;
    keys_url:          string;
    collaborators_url: string;
    teams_url:         string;
    hooks_url:         string;
    issue_events_url:  string;
    events_url:        string;
    assignees_url:     string;
    branches_url:      string;
    tags_url:          string;
    blobs_url:         string;
    git_tags_url:      string;
    git_refs_url:      string;
    trees_url:         string;
    statuses_url:      string;
    languages_url:     string;
    stargazers_url:    string;
    contributors_url:  string;
    subscribers_url:   string;
    subscription_url:  string;
    commits_url:       string;
    git_commits_url:   string;
    comments_url:      string;
    issue_comment_url: string;
    contents_url:      string;
    compare_url:       string;
    merges_url:        string;
    archive_url:       string;
    downloads_url:     string;
    issues_url:        string;
    pulls_url:         string;
    milestones_url:    string;
    notifications_url: string;
    labels_url:        string;
    releases_url:      string;
    deployments_url:   string;
    created_at:        string;
    updated_at:        string;
    pushed_at:         string;
    git_url:           string;
    ssh_url:           string;
    clone_url:         string;
    svn_url:           string;
    homepage:          null | string;
    size:              number;
    stargazers_count:  number;
    watchers_count:    number;
    language:          null | string;
    has_issues:        boolean;
    has_projects:      boolean;
    has_downloads:     boolean;
    has_wiki:          boolean;
    has_pages:         boolean;
    forks_count:       number;
    mirror_url:        null;
    archived:          boolean;
    disabled:          boolean;
    open_issues_count: number;
    license:           License | null;
    forks:             number;
    open_issues:       number;
    watchers:          number;
    default_branch:    DefaultBranch;
}

export enum DefaultBranch {
    Master = "master",
}

export interface License {
    key:     string;
    name:    string;
    spdx_id: string;
    url:     null | string;
    node_id: string;
}

export interface Owner {
    login:               Login;
    id:                  number;
    node_id:             NodeID;
    avatar_url:          string;
    gravatar_id:         string;
    url:                 string;
    html_url:            string;
    followers_url:       string;
    following_url:       FollowingURL;
    gists_url:           GistsURL;
    starred_url:         StarredURL;
    subscriptions_url:   string;
    organizations_url:   string;
    repos_url:           string;
    events_url:          EventsURL;
    received_events_url: string;
    type:                Type;
    site_admin:          boolean;
}

export enum EventsURL {
    HTTPSAPIGithubCOMUsersNiudaiEventsPrivacy = "https://api.github.com/users/niudai/events{/privacy}",
}

export enum FollowingURL {
    HTTPSAPIGithubCOMUsersNiudaiFollowingOtherUser = "https://api.github.com/users/niudai/following{/other_user}",
}

export enum GistsURL {
    HTTPSAPIGithubCOMUsersNiudaiGistsGistID = "https://api.github.com/users/niudai/gists{/gist_id}",
}

export enum Login {
    Niudai = "niudai",
}

export enum NodeID {
    MDQ6VXNlcjQ0MTY1MTgy = "MDQ6VXNlcjQ0MTY1MTgy",
}

export enum StarredURL {
    HTTPSAPIGithubCOMUsersNiudaiStarredOwnerRepo = "https://api.github.com/users/niudai/starred{/owner}{/repo}",
}

export enum Type {
    User = "User",
}
